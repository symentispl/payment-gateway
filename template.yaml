AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Runtime: python3.9
    Architectures:
      - x86_64
    Environment:
      Variables:
        STAGE_PREFIX : !Ref StagePrefix

Parameters:
  PaymentDomainHostedZoneId: 
    Type: "String"
    Default: "Z03959971PI6LXD3U3GYA"
  PaymentDomainName: 
    Type: "String"
    Default: test.payment.jvmperformance.pl
  PaymentCertificateArn:
    Type: "String"
    Default: "arn:aws:acm:eu-central-1:653932013369:certificate/7db121b9-b404-4af6-ad99-e972da300996"
  Stage:
    Type: "String"
    Default: "test"
    AllowedValues:
      - "test"
      - "prod"
  StagePrefix:
    Type: "String"
    Default: "test."
    AllowedValues:
      - "test."
      - "prod."

Resources:
  PaymentFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: payment/
      Handler: app.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CourseTable
        - DynamoDBCrudPolicy:
            TableName: !Ref DiscountTable
      Events:
        Payment:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /payment
            Method: get
            RestApiId: !Ref PaymentApiGateway
  ConfirmationFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: confirmation/
      Handler: app.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PaymentTable
      Events:
        Confirmation:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /confirmation
            Method: post
            RestApiId: !Ref PaymentApiGateway
  CoursesFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: courses/
      Handler: app.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CourseTable
      Events:
        Confirmation:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /courses
            Method: get
            RestApiId: !Ref PaymentApiGateway
  PaymentTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: !Join ['',[!Ref StagePrefix,"payments"]]
      BillingMode: PAY_PER_REQUEST   
      AttributeDefinitions: 
        - AttributeName: id
          AttributeType: S
      KeySchema: 
        - AttributeName: id
          KeyType: HASH
  CourseTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: !Join ['',[!Ref StagePrefix,"courses"]]
      BillingMode: PAY_PER_REQUEST   
      AttributeDefinitions: 
        - AttributeName: course_name
          AttributeType: S
        - AttributeName: course_site
          AttributeType: S
      KeySchema: 
        - AttributeName: course_name
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: course_site_index
          KeySchema:
            - AttributeName: course_site
              KeyType: HASH
          Projection:
            ProjectionType: INCLUDE
            NonKeyAttributes: ["course_name","location","location_url","date","amount","is_active"]
  DiscountTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: !Join ['',[!Ref StagePrefix,"discounts"]]
      BillingMode: PAY_PER_REQUEST   
      AttributeDefinitions: 
        - AttributeName: discount_code
          AttributeType: S
      KeySchema: 
        - AttributeName: discount_code
          KeyType: HASH
  ApiGwAccountConfig:
    Type: "AWS::ApiGateway::Account"
    Properties:
      CloudWatchRoleArn: !GetAtt "ApiGatewayLoggingRole.Arn"
  ApiGatewayLoggingRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "apigateway.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
  PaymentGatewayLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
  PaymentApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      AccessLogSetting: 
        DestinationArn: !GetAtt PaymentGatewayLogGroup.Arn
        Format: $context.identity.sourceIp $context.identity.caller $context.identity.user [$context.requestTime] "$context.httpMethod $context.resourcePath $context.protocol" $context.status $context.responseLength $context.requestId $context.extendedRequestId
      StageName: !Ref Stage
      Domain:
        CertificateArn: !Ref PaymentCertificateArn
        DomainName: !Ref PaymentDomainName
        Route53:
          HostedZoneId: !Ref PaymentDomainHostedZoneId
    DependsOn: ["ApiGwAccountConfig"]
  
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  PaymentGatewayApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${PaymentApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/payment/"
  PaymentFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt PaymentFunction.Arn
  PaymentFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt PaymentFunctionRole.Arn
